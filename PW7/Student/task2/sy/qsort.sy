void exchange(int *a, int *b)
{
    int temp = *a;
    *a = *b;
    *b = temp;
}
int partition(int a[], int p, int r)
{
    int key = a[r]; 
    int i = p - 1;
    for (int j = p; j < r; j++)
    {
        if (a[j] <= key)
        {
            i++;
            exchange(&a[i], &a[j]);
        }
    }
    exchange(&a[i + 1], &a[r]);
    return i + 1;
}

void quickSort(int a[], int p, int r)
{
    int position = 0;
    if (p < r)
    {
        position = partition(a, p, r); 
        quickSort(a, p, position - 1); 
        quickSort(a, position + 1, r); 
    }
}
void print_arr(int arr[], int size)
{
    int i = 0;
    for (i = 0; i < size; i++)
    {
        putint(arr[i]);
    }
}
int main()
{
    int arr[];
    int size = getarray(arr);
    quickSort(arr, 0, size-1);
    print_arr(arr, size);
}